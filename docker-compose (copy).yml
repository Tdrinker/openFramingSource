version: '3.3'

services:
  web:
    image: openframing_web_image
    restart: always
    build:
      context: ./services/web
    expose:
      - "5000"
    volumes:
      - project_data_volume:/home/app/project_data_directory
      - transformers_cache_volume:/home/app/transformers_cache_directory
    depends_on:
      - redis
    environment: # Pass down from .env file, and from the environment
      - REDIS_HOST
      - REDIS_PORT
      - SENDGRID_API_KEY
      - SENDGRID_FROM_EMAIL
      - SERVER_NAME
  nginx:
    build: ./services/nginx
    restart: always
    volumes:
      - ./services/web/frontend:/home/app/frontend
    ports:
      - "80:80"
    depends_on:
      - web
  redis:
    image: redis:6.0.5-alpine
    restart: always
    command: "redis-server --port ${REDIS_PORT}"
    expose:
      - "${REDIS_PORT}"

  classifiers_worker:
    image: openframing_web_image
    restart: always
    command: [ "rq", "worker", "--url", "redis://${REDIS_HOST}:${REDIS_PORT}", "classifiers" ]
    depends_on:
      - redis
    volumes:
      - project_data_volume:/home/app/project_data_directory
      - transformers_cache_volume:/home/app/transformers_cache_directory

    environment: # Pass down from .env file
      - REDIS_HOST
      - REDIS_PORT
      - SENDGRID_API_KEY
      - SENDGRID_FROM_EMAIL
      - SERVER_NAME
      # We need to pass them here, in addition to `command` above, because the 
      # worker will import settings.py, which needs them to be set.

  topic_model_worker:
    image: openframing_web_image
    restart: always
    command: [ "rq", "worker", "--url", "redis://${REDIS_HOST}:${REDIS_PORT}", "topic_models" ]
    depends_on:
      - redis
    volumes:
      - project_data_volume:/home/app/project_data_directory
      - transformers_cache_volume:/home/app/transformers_cache_directory
    environment: 
      - REDIS_HOST
      - REDIS_PORT
      - SENDGRID_API_KEY
      - SENDGRID_FROM_EMAIL
      - SERVER_NAME
      # We need to pass them here, in addition to `command` above, because the 
      # We need to pass them here, in addition to `command` above, because the 
      # worker will import settings.py, which needs them to be set.



volumes:
  project_data_volume:
  transformers_cache_volume:
